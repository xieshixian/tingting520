
services:
  nginx:
    image: nginx:latest
    container_name: nginx
    ports:
      - "8080:80" # 映射本地端口 8080 到容器的端口 80
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro # 挂载自定义配置文件
      - ./html:/usr/share/nginx/html # 静态资源目录
    depends_on:
      - app

  app:
    image: node:16 # 使用 Node.js 16 的镜像
    container_name: node-app
    volumes:
      - ./app:/usr/src/app # 挂载本地代码目录到容器
    working_dir: /usr/src/app # 容器内的工作目录
    ports:
      - "3000:3000" # 映射本地端口 3000 到容器的端口 3000
    command: "npm start" # 启动 Node.js 应用
#    command: "npx nodemon index.js" # 启动 Node.js 应用
    depends_on:
      - db

  db:
    image: mysql:8 # 使用 MySQL 8 的镜像
    container_name: mysql-db
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD} # 设置 root 用户密码
      MYSQL_DATABASE: ${MYSQL_DATABASE} # 创建数据库
      MYSQL_USER: ${MYSQL_USER} # 创建用户
      MYSQL_PASSWORD: ${MYSQL_PASSWORD} # 设置用户密码
    ports:
      - "3306:3306" # 映射本地端口 3306 到容器的端口 3306
    volumes:
      - ./db-init-scripts:/docker-entrypoint-initdb.d
      - db-data:/var/lib/mysql # 持久化数据库数据

volumes:
  db-data:

