
services:
  app:
    image: docker.io/momoqinghan666/laravel-app:multi-platform
    build:
      context: ./php
      dockerfile: Dockerfile
    user: "1000:1001"  # 设置为主机上的 ubuntu 用户的 UID 和 GID
    container_name: laravel_app
#    platform: linux/arm64
    volumes:
      - ./logs/php:/var/log/php
      - ./laravel:/var/www/html
    environment:
      - XDEBUG_MODE=debug
      - XDEBUG_CLIENT_HOST=host.docker.internal
      - XDEBUG_CLIENT_PORT=9003
    networks:
      - laravel_network

  nginx:
    image: nginx:latest
    container_name: laravel_nginx
#    platform: linux/arm64
#    platform: linux/amd64
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
      - ./nginx/multi-domain.conf:/etc/nginx/conf.d/multi-domain.conf
      - ./laravel:/var/www/html:rw
      - ./logs/nginx:/var/log/nginx
    ports:
      - "80:80"
      - "443:443"
    networks:
      - laravel_network

  mysql:
    image: mysql:8.0.41
    container_name: laravel_mysql
#    platform: linux/arm64
#    platform: linux/amd64
    volumes:
      - ./mysql/my.cnf:/etc/mysql/my.cnf
      - ./mysql_data:/var/lib/mysql
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: laravel
      MYSQL_USER: laravel
      MYSQL_PASSWORD: laravel
    ports:
      - "3306:3306"
    networks:
      - laravel_network

  redis:
    image: redis:latest
    container_name: laravel_redis
#    platform: linux/arm64
#    platform: linux/amd64
    volumes:
      - ./redis/redis.conf:/usr/local/etc/redis/redis.conf
    ports:
      - "6379:6379"
    networks:
      - laravel_network

volumes:
  mysql_data:

networks:
  laravel_network:
    driver: bridge